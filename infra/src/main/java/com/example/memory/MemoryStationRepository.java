package com.example.memory;

import com.example.station.Station;
import com.example.station.StationRepository;
import org.springframework.context.annotation.Profile;
import org.springframework.stereotype.Repository;

import java.time.OffsetDateTime;
import java.util.ArrayList;
import java.util.Collections;
import java.util.List;
import java.util.Optional;
import java.util.concurrent.atomic.AtomicLong;

@Repository
@Profile("memory")
public class MemoryStationRepository implements StationRepository {

    private final AtomicLong autoGeneratedId = new AtomicLong(0);
    private final List<Station> data = Collections.synchronizedList(new ArrayList<>());

    @Override
    public Station save(Station station) {
        Station newStation = Station.builder()
                .id(autoGeneratedId.incrementAndGet())
                .name(station.getName())
                .location(station.getLocation())
                .createdAt(OffsetDateTime.now())
                .updatedAt(OffsetDateTime.now())
                .build();
        data.add(newStation);

        return newStation;
    }

    @Override
    public Optional<Station> findById(Long id) {
        return data.stream().filter(station -> station.getId().equals(id)).findFirst();
    }
}
